Sub opening_zoom()
'delcaring the variables
    Dim zoom  As Variant
    Dim cell_range As Range
    Dim location  As String
    
    'using Application.GetOpenFilename method to filter the csv and thus open the file
    zoom = Application.GetOpenFilename("CSV File (*.csv), *.csv")
    
    ' for error when clicking cancel
    On Error Resume Next
    'asking the user to input the A columb to place the cvs information
    Set cell_range = Application.InputBox("Cell to begin copying this CSV File, Please Select A1: ", "Select Range", Type:=8)
  
  ' This a method to deal with cancel debug error with a range as a variable and a object required
  ' the user click the cancel button
   If Err.Number = 424 Then
        Exit Sub
    End If
    On Error GoTo 0   '  this disables the error handling
    
  ' assigning the location to range adresss
    location = cell_range.Address
    
    'Query Table
    ' refrence
    ' https://docs.microsoft.com/en-us/office/vba/api/excel.querytables.add
    ' addign the information into the excel sheet based on selection use only Columb A becuase I cleared the other columbs
    With ActiveSheet.QueryTables.Add("TEXT;" & zoom, Range(location))
        ' same names and rows
        .FieldNames = True
        .RowNumbers = False
        ' not not have the same formating
        .PreserveFormatting = False
        .RefreshOnFileOpen = False
        ' adds the needed rows
        .RefreshStyle = xlInsertDeleteCells
        ' sabe data in the worksheet
        .SaveData = True
        .TextFilePromptOnRefresh = False
        'the pre set rows form the file imported
        .TextFileStartRow = 1
        'returns columbs fromat form the file imported
        .TextFileParseType = xlDelimited
        'Returns or sets the text qualifier when you import a text file into a query table
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        '  this is important to keep the format in sparate in columbs
        .TextFileCommaDelimiter = True
        ' this formats negative numbers with a - minus sign
        .TextFileTrailingMinusNumbers = True
        ' it refreshes the results we can leave it on
        .Refresh BackgroundQuery:=True
    End With
    
  'sorting the data in the colubm in alphabetical order, so we can compaere in sheet 1
    ActiveWorkbook.Worksheets("Sheet1").Sort.SortFields.Add2 Key:=Range(location) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Sheet1").Sort
        .SetRange Range("A2:B50")
        .Header = xlNo
        .MatchCase = False
        'alphabetical order
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'sorting the data in the colubm in alphabetical order, but in sheet 2
    ActiveWorkbook.Worksheets("Sheet2").Sort.SortFields.Add2 Key:=Range(location) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Sheet2").Sort
        .SetRange Range("A2:B50")
        .Header = xlNo
        .MatchCase = False
        'alphabetical order
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
  '  Here I edit the contents of the cvs file to remove unwated information
    Columns("B:B").Select
    Selection.ClearContents
    Columns("C:C").Select
    Selection.ClearContents
    Columns("D:D").Select
    Selection.ClearContents
    Range("A1").Select
    ActiveCell.FormulaR1C1 = "User Name "
    Range("B1").Select
    
    ' move the contents of the timein the meeting to columb B
     Columns("E:E").Select
    Selection.Copy
    Columns("B:B").Select
    
    ActiveSheet.Paste
     Columns("E:E").Select
    Selection.ClearContents
    
    Range("A1").Select
    
     ' calling to find what sudent left early or came late to the meeting
   Call student_left_meeting_early
   
    
'  calling the sub fucntion to find the doffrence bewteen the two sheets
   Call find_diffrences("sheet1", "sheet2")
   
   
End Sub


' to find the difrences between the two sheets
Sub find_diffrences(zoom_values As String, orginal_values As String)

' declare variables
Dim sheet As Range
Dim answer As Integer
Dim count As Integer

' literate thorught the cell worksheets and compare them cell by cell
For Each sheet In ActiveWorkbook.Worksheets(orginal_values).UsedRange

' if the value is not the same highlight it red
    If Not sheet.value = ActiveWorkbook.Worksheets(zoom_values).Cells(sheet.Row, sheet.Column).value Then
        ' highling the different cells on the sheet #2
        sheet.Interior.Color = vbRed
        ' count to display how manny diffrence were found
        count = count + 1
        
    End If
Next

If count = 0 Then
' display hwo many students were not there at the zoom meeting
MsgBox " All the students were at the end of the meeting", vbOKOnly
Else
MsgBox count & " students were NOT at the end of the meeting", vbOKOnly
End If

ActiveWorkbook.Sheets(orginal_values).Select


' ask the user if he wants to clear the contents of the zoom values
answer = MsgBox("Do you want to clear contents of sheet 1?", vbQuestion + vbYesNo)
' if yes then clear contents
If answer = vbYes Then
Sheets("sheet1").Cells.Clear
Else
    '  do nothing
  End If
  
  '  ask the user if he wants to clear the highlight names
  answer = MsgBox("Do you want to clear highlight items from sheet 2?", vbQuestion + vbYesNo)
' if yes then clear contents
If answer = vbYes Then
 Cells.Interior.ColorIndex = xlNone
Else
    '  do nothing
  End If
  
 
End Sub


Sub student_left_meeting_early()

' declare variables
Dim minutes As Range
Dim value_cells As Range

' only used the cells that are active on the sheet
Set minutes = ActiveSheet.UsedRange
'highlight cells that are less then the require minutes in the meeting
' using a counter for each
For Each value_cells In minutes
'loop throguht the active cells and then assign the vlaues less then
If value_cells.value < 60 Then
'hihglight light green cells less than the value above
value_cells.Interior.Color = RGB(179, 255, 231)
Else
' else do nothing to the cells not highlight
value_cells.Interior.ColorIndex = xlNone
End If

' counter next values
Next

' clear format highlight from unwated cells from columb C TO E
    Range("C1:E50").Select
    Selection.ClearFormats
    ActiveWindow.ScrollColumn = 1
    Range("A1").Select
   
    
End Sub

